/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as AddPostRouteImport } from './routes/addPost'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIdRouteImport } from './routes/user.$id'
import { Route as PostChar123IdChar125RouteImport } from './routes/post.{-$id}'

const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const AddPostRoute = AddPostRouteImport.update({
  id: '/addPost',
  path: '/addPost',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIdRoute = UserIdRouteImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const PostChar123IdChar125Route = PostChar123IdChar125RouteImport.update({
  id: '/post/{-$id}',
  path: '/post/{-$id}',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addPost': typeof AddPostRoute
  '/signIn': typeof SignInRoute
  '/post/{-$id}': typeof PostChar123IdChar125Route
  '/user/$id': typeof UserIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addPost': typeof AddPostRoute
  '/signIn': typeof SignInRoute
  '/post/{-$id}': typeof PostChar123IdChar125Route
  '/user/$id': typeof UserIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addPost': typeof AddPostRoute
  '/signIn': typeof SignInRoute
  '/post/{-$id}': typeof PostChar123IdChar125Route
  '/user/$id': typeof UserIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/addPost'
    | '/signIn'
    | '/post/{-$id}'
    | '/user/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/addPost' | '/signIn' | '/post/{-$id}' | '/user/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/addPost'
    | '/signIn'
    | '/post/{-$id}'
    | '/user/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AddPostRoute: typeof AddPostRoute
  SignInRoute: typeof SignInRoute
  PostChar123IdChar125Route: typeof PostChar123IdChar125Route
  UserIdRoute: typeof UserIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/addPost': {
      id: '/addPost'
      path: '/addPost'
      fullPath: '/addPost'
      preLoaderRoute: typeof AddPostRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/$id': {
      id: '/user/$id'
      path: '/user/$id'
      fullPath: '/user/$id'
      preLoaderRoute: typeof UserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post/{-$id}': {
      id: '/post/{-$id}'
      path: '/post/{-$id}'
      fullPath: '/post/{-$id}'
      preLoaderRoute: typeof PostChar123IdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AddPostRoute: AddPostRoute,
  SignInRoute: SignInRoute,
  PostChar123IdChar125Route: PostChar123IdChar125Route,
  UserIdRoute: UserIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
